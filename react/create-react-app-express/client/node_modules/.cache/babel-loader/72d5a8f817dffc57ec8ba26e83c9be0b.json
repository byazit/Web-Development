{"ast":null,"code":"var _jsxFileName = \"/home/byazit/github/personal/Web-Development/react/create-react-app-express/client/src/components/ShowUser.js\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass ShowUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: '',\n      name: '',\n      email: '',\n      age: '',\n      responseToPost: ''\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/users/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          age: this.state.age\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n      this.componentDidMount();\n      this.fileRef.current.value = '';\n    };\n\n    this.fileRef = React.createRef();\n    this.state = {\n      error: null,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/users/').then(res => res.json()).then(result => {\n      this.setState({\n        users: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n    fetch('/users/').then(res => res.json()).then(result => {\n      this.setState({\n        users: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.post);\n    const _this$state = this.state,\n          error = _this$state.error,\n          users = _this$state.users;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.response), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Post to Server:\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Name: \", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.post,\n        ref: this.fileRef,\n        onChange: e => this.setState({\n          name: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Email: \", React.createElement(\"input\", {\n        type: \"email\",\n        value: this.state.post,\n        ref: this.fileRef,\n        onChange: e => this.setState({\n          email: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Age: \", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.post,\n        ref: this.fileRef,\n        onChange: e => this.setState({\n          age: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.responseToPost), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Users List\"), React.createElement(TableContainer, {\n        component: Paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"#ID\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Password\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, users.map(user => React.createElement(TableRow, {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, user.id), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, user.name), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, user.email), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, user.password)))))));\n    }\n  }\n\n}\n\nexport default ShowUser;","map":{"version":3,"sources":["/home/byazit/github/personal/Web-Development/react/create-react-app-express/client/src/components/ShowUser.js"],"names":["React","Component","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","ShowUser","constructor","props","state","response","name","email","age","responseToPost","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","text","setState","componentDidMount","fileRef","current","value","createRef","error","users","then","res","json","result","render","console","log","post","message","target","map","user","id","password"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nclass ShowUser extends Component {\n  state = {\n    response: '',\n    name: '',\n    email: '',\n    age: '',\n    responseToPost: '',\n  };\n  constructor(props) {\n    super(props);\n    this.fileRef = React.createRef();\n    this.state = {\n      error: null,\n      users: []\n    }\n  }\n  \n  componentDidMount() {\n    fetch('/users/')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            users: result\n          });          \n        },\n        (error) => {\n          this.setState({ error });\n        }\n      )\n      fetch('/users/')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            users: result\n          });          \n        },\n        (error) => {\n          this.setState({ error });\n        }\n      )\n  }  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/users/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name: this.state.name,email: this.state.email,age: this.state.age }),\n    });\n    const body = await response.text();    \n    this.setState({ responseToPost: body});\n    this.componentDidMount();    \n    this.fileRef.current.value = '';\n  };\n  \nrender() {\n    console.log(this.state.post);\n    const { error, users} = this.state;    \n    if(error) {\n      return (\n        <div>Error: {error.message}</div>\n      )\n    } else {\n      return(\n        <div>        \n            <p>{this.state.response}</p>\n            <form onSubmit={this.handleSubmit}>\n            <p>\n                <strong>Post to Server:</strong>\n            </p>\n            <p>\n                Name: <input\n                type=\"text\"\n                value={this.state.post}\n                ref={this.fileRef}\n                onChange={e => this.setState({ name: e.target.value })}\n                />\n            </p>\n            <p>\n                Email: <input\n                type=\"email\"\n                value={this.state.post}\n                ref={this.fileRef}\n                onChange={e => this.setState({ email: e.target.value })}\n                />\n            </p>\n            <p>\n                Age: <input\n                type=\"number\"\n                value={this.state.post}\n                ref={this.fileRef}\n                onChange={e => this.setState({ age: e.target.value })}\n                />\n            </p>\n            <button type=\"submit\">Submit</button>\n            </form>\n            <p>{this.state.responseToPost}</p>                \n            <h2>Users List</h2>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>#ID</TableCell>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Email</TableCell>\n                            <TableCell>Password</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {users.map(user => (\n                            <TableRow key={user.id}>\n                            <TableCell component=\"th\" scope=\"row\">{user.id}</TableCell>\n                            <TableCell>{user.name}</TableCell>                  \n                            <TableCell>{user.email}</TableCell>                  \n                            <TableCell>{user.password}</TableCell>                  \n                            </TableRow>\n                        ))}\n                    </TableBody>            \n                </Table>\n            </TableContainer>\n        </div>\n      )\n    }\n  }\n}\n\nexport default ShowUser;\n"]},"metadata":{},"sourceType":"module"}