{"ast":null,"code":"var _jsxFileName = \"/home/byazit/github/personal/Web-Development/react/create-react-app-express/client/src/components/ShowUser.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\nclass ShowUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: '',\n      name: '',\n      email: '',\n      age: '',\n      responseToPost: ''\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/users/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          age: this.state.age\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n\n    this.state = {\n      error: null,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/users/').then(res => res.json()).then(result => {\n      this.setState({\n        users: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          users = _this$state.users;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Users List\"), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"#ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Age\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, users.map(user => React.createElement(\"tr\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, user.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, user.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, user.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, user.age))))));\n    }\n  }\n\n}\n\nexport default ShowUser;","map":{"version":3,"sources":["/home/byazit/github/personal/Web-Development/react/create-react-app-express/client/src/components/ShowUser.js"],"names":["React","Component","Table","ShowUser","constructor","props","state","response","name","email","age","responseToPost","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","text","setState","error","users","componentDidMount","then","res","json","result","render","message","map","user","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\nclass ShowUser extends Component {\n  state = {\n    response: '',\n    name: '',\n    email: '',\n    age: '',\n    responseToPost: '',\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      users: []\n    }\n  }\n  \n  componentDidMount() {\n    fetch('/users/')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            users: result\n          });          \n        },\n        (error) => {\n          this.setState({ error });\n        }\n      )\n  }  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/users/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name: this.state.name,email: this.state.email,age: this.state.age }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  \nrender() {\n    \n    const { error, users} = this.state;    \n    if(error) {\n      return (\n        <div>Error: {error.message}</div>\n      )\n    } else {\n      return(\n          \n        <div>\n          <h2>Users List</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>#ID</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Age</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <tr key={user.id}>\n                  <td>{user.id}</td>\n                  <td>{user.name}</td>                  \n                  <td>{user.email}</td>                  \n                  <td>{user.age}</td>                  \n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default ShowUser;"]},"metadata":{},"sourceType":"module"}